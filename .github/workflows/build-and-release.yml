name: Build and Release (Linux & macOS)

permissions:
  contents: write
  packages: write

on:
  push:
    tags:
      - '*'

jobs:
  build-linux:
    runs-on: ubuntu-latest
    outputs:
      linux_asset: ${{ steps.linux_output.outputs.asset_path }}
    steps:
      - uses: actions/checkout@v4

      - name: Make build.sh executable
        run: chmod +x ./build.sh

      - name: Build Linux Executable
        run: ./build.sh linux

      - name: Set output path for Linux asset
        id: linux_output
        run: echo "asset_path=$(find ./build -type f -name '*linux*' | head -n1)" >> $GITHUB_OUTPUT

      - name: Upload Linux Executable
        uses: actions/upload-artifact@v4
        with:
          name: linux-executable
          path: ${{ steps.linux_output.outputs.asset_path }}

  build-macos:
    runs-on: macos-latest
    outputs:
      macos_asset: ${{ steps.macos_output.outputs.asset_path }}
    steps:
      - uses: actions/checkout@v4

      - name: Make build.sh executable
        run: chmod +x ./build.sh

      - name: Build Mac Executable
        run: ./build.sh mac

      - name: Set output path for Mac asset
        id: macos_output
        run: echo "asset_path=$(find ./build -type f -name '*mac*' | head -n1)" >> $GITHUB_OUTPUT

      - name: Upload Mac Executable
        uses: actions/upload-artifact@v4
        with:
          name: macos-executable
          path: ${{ steps.macos_output.outputs.asset_path }}

  release:
    needs: [build-linux, build-macos]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download Linux Executable
        uses: actions/download-artifact@v4
        with:
          name: linux-executable
          path: ./dist

      - name: Download Mac Executable
        uses: actions/download-artifact@v4
        with:
          name: macos-executable
          path: ./dist

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          generate_release_notes: true
          files: |
            ./dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
